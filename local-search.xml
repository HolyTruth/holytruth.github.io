<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>github博客搭建</title>
    <link href="/post/github-blog-1wteoq.html"/>
    <url>/post/github-blog-1wteoq.html</url>
    
    <content type="html"><![CDATA[<h1 id="github博客搭建"><a href="#github博客搭建" class="headerlink" title="github博客搭建"></a>github博客搭建</h1><p>参考：<a href="https://www.52pojie.cn/thread-1825164-1-1.html">https://www.52pojie.cn/thread-1825164-1-1.html</a></p><h1 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h1><p>只需要注意仓库名为<span style="font-weight: bold;" data-type="strong">你的ID+.github.io</span>即可，比如ID为<span style="font-weight: bold;" data-type="strong">truth</span>，那设置仓库名就是<span style="font-weight: bold;" data-type="strong">truth.github.io</span></p><p>‍</p><h1 id="设置仓库"><a href="#设置仓库" class="headerlink" title="设置仓库"></a>设置仓库</h1><p>进入仓库-&gt;setting，在左侧找到<span style="font-weight: bold;" data-type="strong">Pages</span>选项卡</p><p>​<img src="http://127.0.0.1:6806/assets/image-20231111122046-hgk3tnf.png" alt="image">​</p><p>设置好Brach后刷新页面就可以看到这个：</p><p>​<img src="http://127.0.0.1:6806/assets/image-20231111122600-7kit2k3.png" alt="image">​</p><p>至此，我们可以在github域名上访问仓库了，下面就是建立和美化博客的工作了</p><h1 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h1><p><a href="%5Bhttps://hexo.io/zh-cn/%5D(https://hexo.io/zh-cn/)">hexo</a>是一款博客框架, 可以通过简单的命令部署出漂亮的博客系统。</p><p>前置需要npm和nodejs, 其中nodejs需要&gt;&#x3D;14.0, 以下操作是在本地ubuntu 22.04系统中进行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 安装hexo</span><br>npm install hexo -g<br><br><br><span class="hljs-comment"># 初始换blog目录</span><br><span class="hljs-built_in">mkdir</span> /blog &amp;&amp; <span class="hljs-built_in">cd</span> /blog<br>hexo init<br><br><span class="hljs-comment"># 启动web服务, 默认监听4000端口</span><br>hexo server /  hexo s<br><br></code></pre></td></tr></table></figure><p>如此就可以在本地访问到一个简单的blog系统了。</p><p>‍</p><h2 id="fluid主题"><a href="#fluid主题" class="headerlink" title="fluid主题"></a>fluid主题</h2><p><a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid</a>是国人开发的一款 Material Design 风格的主题，安装也很简单</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 安装fluid</span><br><span class="hljs-built_in">cd</span> /blog<br>npm install --save hexo-theme-fluid<br><br><span class="hljs-comment"># 下载插件配置文件</span><br>wget https://raw.githubusercontent.com/fluid-dev/hexo-theme-fluid/master/_config.yml -O /blog/_config.fluid.yml<br><br><span class="hljs-comment"># 编辑全局配置文件</span><br>vim /blog/_config.yml<br> <span class="hljs-comment"># theme: fluid  # 指定主题</span><br> <span class="hljs-comment"># language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改</span><br><br></code></pre></td></tr></table></figure><p>‍</p><h2 id="功能测试"><a href="#功能测试" class="headerlink" title="功能测试"></a>功能测试</h2><p>新建about页面，验证博客是否正常</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo new page about<br></code></pre></td></tr></table></figure><p>命令执行后会在<code>/blog/source/</code>​目录下新建一个about目录，目录下有<code>index.md</code>​的文件，为文件添加一行<code>layout: about</code>​</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs md">---<br>title: about<br>date: 2020-02-23 19:20:33<br><span class="hljs-section">layout: about</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><p>然后执行<code>hexo server</code>​，浏览器访问<code>ip:4000/about</code>​</p><p>​<img src="http://127.0.0.1:6806/assets/image-20231111173203-3xwtp53.png" alt="image">成功！</p><p>‍</p><h2 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h2><p>hexo支持<a href="https://hexo.io/docs/one-command-deployment.html">一键部署到github</a>上</p><h3 id="安装git组件"><a href="#安装git组件" class="headerlink" title="安装git组件"></a>安装git组件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 安装组件</span><br>npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h3 id="编辑配置文件-config-yml​"><a href="#编辑配置文件-config-yml​" class="headerlink" title="编辑配置文件_config.yml​"></a>编辑配置文件<code>_config.yml</code>​</h3><p>​<img src="http://127.0.0.1:6806/assets/image-20231111185716-9r80pha.png" alt="image">​</p><h3 id="配置github连接信息"><a href="#配置github连接信息" class="headerlink" title="配置github连接信息"></a>配置github连接信息</h3><h4 id="ssh证书"><a href="#ssh证书" class="headerlink" title="ssh证书"></a>ssh证书</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git config --global user.name <span class="hljs-string">&quot;yourname&quot;</span> <br>git config --global user.email <span class="hljs-string">&quot;youremail&quot;</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;youremail&quot;</span><br></code></pre></td></tr></table></figure><p>配置后使用以下命令测试是否配置成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>发现不太成功，原因是<a href="https://blog.csdn.net/KevinHades/article/details/128848004">家中使用的网络代理封禁了 Github 端口 22 的连接</a>，解决办法：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># vim ~/.ssh/config</span><br>Host github.com<br>    HostName ssh.github.com<br>    User git<br>    Port 443<br></code></pre></td></tr></table></figure><p>​<img src="http://127.0.0.1:6806/assets/image-20231111193944-tzqunhs.png" alt="image">​</p><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><p>将上述命令得到的信息写入github设置中</p><p>​<img src="http://127.0.0.1:6806/assets/image-20231111190246-1qea9n7.png" alt="image">​</p><p>执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo clean<br>hexo g <span class="hljs-comment"># 生成静态文件, 也就是public目录</span><br>hexo d<span class="hljs-comment"># 部署</span><br></code></pre></td></tr></table></figure><p>部署还需要token，在执行<code>hexo d</code>​时输入</p><p>​<img src="http://127.0.0.1:6806/assets/image-20231111190631-2eetv77.png" alt="image">​</p><h4 id="注册token"><a href="#注册token" class="headerlink" title="注册token"></a>注册token</h4><p>进入setting页面，左侧最下面找到<code>Developer settings</code>​</p><p>​<img src="http://127.0.0.1:6806/assets/image-20231111190803-vosmgbm.png" alt="image">​</p><p>然后按照要求填写即可</p><p><img src="http://127.0.0.1:6806/assets/image-20231111190845-xewy5fc.png" alt="image">​</p><p>注意需要勾选repo权限选项</p><p>​<img src="http://127.0.0.1:6806/assets/image-20231111190929-pl8h8x2.png" alt="image">​</p><p>‍</p><h2 id="成功部署"><a href="#成功部署" class="headerlink" title="成功部署"></a>成功部署</h2><p>部署成功的输出应如图所示</p><p>​<img src="http://127.0.0.1:6806/assets/image-20231111191055-93ad4sd.png" alt="image">​</p><p>‍</p><p>但是后续仍然需要输入token，这不够优雅！</p><p>修改<code>_config.yml</code>​, 将<code>https://github.com/HolyTruth/holytruth.github.io</code>​改为<code>git@github.com:HolyTruth/holytruth.github.io</code>​</p><p>​<img src="http://127.0.0.1:6806/assets/image-20231111195849-3lffwzs.png" alt="image">​</p><p>舒服了</p><p>‍</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
